# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  tf:
    jobs:
      notification:
        parameters:
          api-key:
            default: ${API_KEY}
            description: Enter either your api-key or use the CircleCI UI to add
              your token under the 'API_KEY' env var
            type: string
          host:
            default: ${HOST}
            description: Enter either your host or use the CircleCI UI to add
              your token under the 'HOST' env var
            type: string
          repository:
            default: ${CIRCLE_REPOSITORY_URL}
            description: The URL to a repository
            type: string
          username:
            default: ${CIRCLE_USERNAME}
            description: The user who triggered the deployment.
            type: string
          message:
            description: # a helpful description
            type: string
            default: ''
        executor: alpine
        steps:
          - notify:
              api-key: <<parameters.api-key>>
              host: <<parameters.host>>
              repository: <<parameters.repository>>
              username: <<parameters.username>>
              message: <<parameters.message>>
    commands:
      notify:
        parameters:
          api-key:
            type: string
          host:
            type: string
          repository:
            type: string
          username:
            type: string
          message:
            type: string
        steps:
          - run:
              command: |
                if [ ! -x /bin/bash ]; then
                  echo Bash not installed.
                  exit 1
                fi
              name: Provide error if non-bash shell
          - run:
              command: |
                # Provide error if no api-key is set and error. Otherwise continue
                if [ -z "<< parameters.api-key >>" ]; then
                  echo "NO API KEY SET"
                  echo "Please input your API_KEY value either in the settings for this project, or as a parameter for this orb."
                  exit 1
                else
                  # Prepare message
                  # hehsiao pushed 'GitHub Webhook integrations' on refs/heads/github-hooks in Taloflow/external_events
                  curl -X POST -H 'Content-type: application/json' \
                    -H "x-api-key: "<< parameters.api-key >>"" \
                    --data \
                    "{ \
                      \"description\": \"<<parameters.username>> deployed from <<parameters.repository>>: << parameters.message >>\",
                      \"time\": \"$(date +%s)\"
                    }" << parameters.host >>
                  echo ""
                  echo "Deployment event sent."
                fi
              name: Sending Deployment Notification
    executors:
      alpine:
        docker:
          - environment:
              TERM: dumb
            image: cibuilds/base:latest
        resource_class: small

# Orchestrate or schedule a set of jobs
workflows:
  # Name the workflow "welcome"
  welcome-workflow:
    jobs:
      - tf/notification:
          message: deployment

